// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define([], function() {
    var TopBarCreate;
    return TopBarCreate = (function(_super) {
      __extends(TopBarCreate, _super);

      function TopBarCreate(options) {
        this.options = options;
        TopBarCreate.__super__.constructor.call(this);
      }

      TopBarCreate.prototype.init = function(instances) {
        _.extend(this, Backbone.Events);
        this.keyListener = instances['KeyListener'];
        this.graphView = instances['GraphView'];
        this.graphModel = instances['GraphModel'];
        this.dataController = instances['local/Neo4jDataController'];
        this.buildingLink = false;
        this.sourceSet = false;
        this.tempLink = {};
        this.render();
        $(this.el).appendTo($('#buildbar'));
        this.selection = instances["NodeSelection"];
        return this.linkSelection = instances["LinkSelection"];
      };

      TopBarCreate.prototype.render = function() {
        return "     $container = $('<div id=\"topbarcreate\">').appendTo @$el\n\n     $nodeSide = $('<div id=\"nodeside\" data-intro=\"Add a Node and connect it to other nodes in the graph\" data-position=\"left\">').appendTo $container\n\n     $nodeHolder = $('<textarea placeholder=\"Add Node\" id=\"nodeHolder\" name=\"textin\" rows=\"1\" cols=\"35\"></textarea>').appendTo $nodeSide\n\n     @$nodeWrapper = $('<div class=\"source-container\">').appendTo $nodeSide\n\n     $nodeInputName = $('<textarea placeholder=\"Node Name [optional]\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo @$nodeWrapper\n     $nodeInputUrl = $('<textarea placeholder=\"Url [optional]\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo @$nodeWrapper\n     $nodeInputDesc = $('<textarea placeholder=\"Description #key1 value1 #key2 value2\" rows=\"5\" cols=\"35\"></textarea><br>').appendTo @$nodeWrapper\n\n     $createnodeNodeButton = $('<input id=\"queryform\" type=\"button\" value=\"Create Node\">').appendTo @$nodeWrapper\n\n     $createnodeNodeButton.click () => \n       @buildNode(@parseSyntax($nodeInputName.val()+\" : \"+$nodeInputDesc.val()+\" #url \"+$nodeInputUrl.val()))\n       $nodeInputName.val('')\n       $nodeInputUrl.val('')\n       $nodeInputDesc.val('')\n       $nodeInputName.focus()\n\n     # popout button for more detailed node creation\n     $openPopoutButton = $('<i class=\"right fa fa-expand\"></i>').appendTo @$nodeWrapper\n\n     $openPopoutButton.click () =>\n       @trigger 'popout:open'\n       @$nodeWrapper.hide()\n       $nodeHolder.show()\n\n     $linkSide = $('<div id=\"linkside\">').appendTo $container\n\n     $linkHolder = $('<textarea placeholder=\"Add Link\" id=\"nodeHolder\" name=\"textin\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo $linkSide\n\n     @$linkWrapper = $('<div id=\"source-container\">').appendTo $linkSide\n     #$linkTitleArea = $('<textarea placeholder=\"Title\" id=\"nodeTitle\" name=\"textin\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo @$linkWrapper\n     # $linkInput = $('<textarea placeholder=\"Link : A link\'s description #key1 value1 #key2 value2\" id=\"linkInputField\" name=\"textin\" rows=\"5\" cols=\"35\"></textarea><br>').appendTo @$linkWrapper\n     $linkInputName = $('<textarea placeholder=\"Link Name [optional]\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo @$linkWrapper\n     $linkInputUrl = $('<textarea placeholder=\"Url [optional]\" rows=\"1\" cols=\"35\"></textarea><br>').appendTo @$linkWrapper\n     $linkInputDesc = $('<textarea placeholder=\"Description\n #key1 value1 #key2 value2\" rows=\"5\" cols=\"35\"></textarea><br>').appendTo @$linkWrapper\n\n     $createLinkButton = $('<input id=\"queryform\" type=\"submit\" value=\"Create Link\"><br>').appendTo @$linkWrapper\n\n     $linkingInstructions = $('<span id=\"toplink-instructions\">').appendTo $container\n\n     $createLinkButton.click () =>\n       @buildLink(\n         tlink = @parseSyntax($linkInputName.val()+\" : \"+$linkInputDesc.val()+\" #url \"+$linkInputUrl.val())\n         # if tlink.name is \"\" then tlink.name = \"link\"\n         # console.log $linkInputName.val()+\" : \"+$linkInputDesc.val()+\" #url \"+$linkInputUrl.val()\n       )\n       $linkInputName.val('')\n       $linkInputUrl.val('')\n       $linkInputDesc.val('')\n       # $linkInput.blur()\n       @$linkWrapper.hide()\n       $('#toplink-instructions').replaceWith('<span id=\"toplink-instructions\" style=\"color:black; font-size:20px\">Click two Nodes to link them.</span>')\n\n     @$nodeWrapper.hide()\n     @$linkWrapper.hide()\n\n     $nodeHolder.focus () =>\n       @$nodeWrapper.show()\n       $nodeInputName.focus()\n       $nodeHolder.hide()\n\n     $linkHolder.focus () =>\n       @$linkWrapper.show()\n       $linkInputName.focus()\n       $linkHolder.hide()\n\n     @graphView.on \"view:click\", () => \n       if @$nodeWrapper.is(':visible')\n         @$nodeWrapper.hide()\n         $nodeHolder.show()\n       if @$linkWrapper.is(':visible')\n         @$linkWrapper.hide()\n         $linkHolder.show()\n\n     @graphView.on \"enter:node:click\", (node) =>\n       if @buildingLink\n         if @sourceSet\n           @tempLink.target = node\n           link = @tempLink\n           @dataController.linkAdd(link, (linkres)=> \n             newLink = linkres\n             allNodes = @graphModel.getNodes()\n             newLink.source = n for n in allNodes when n['_id'] is link.source['_id']\n             newLink.target = n for n in allNodes when n['_id'] is link.target['_id']\n             @graphModel.putLink(newLink)\n             @linkSelection.toggleSelection(newLink)\n             )\n           @sourceSet = @buildingLink = false\n           $('#toplink-instructions').replaceWith('<span id=\"toplink-instructions\"></span>')\n           $linkHolder.show()\n         else\n           @tempLink.source = node\n           @sourceSet = true\n           $('#toplink-instructions').replaceWith('<span id=\"toplink-instructions\" style=\"color:black; font-size:20px\">Click two Nodes to link them.</span>')";
      };

      TopBarCreate.prototype.update = function(node) {
        return this.selection.getSelectedNodes();
      };

      TopBarCreate.prototype.buildNode = function(node) {
        var _this = this;
        return this.dataController.nodeAdd(node, function(datum) {
          datum.fixed = true;
          datum.px = $(window).width() / 2;
          datum.py = $(window).height() / 2;
          _this.graphModel.putNode(datum);
          return _this.selection.toggleSelection(datum);
        });
      };

      TopBarCreate.prototype.buildLink = function(linkProperties) {
        this.tempLink.properties = linkProperties;
        console.log("tempLink set to", this.tempLink);
        return this.buildingLink = true;
      };

      TopBarCreate.prototype.parseSyntax = function(input) {
        var createDate, dict, match, pattern, strsplit, text;
        console.log("input", input);
        strsplit = input.split('#');
        strsplit[0] = strsplit[0].replace(/:/, " #description ");
        /* The : is shorthand for #description*/

        text = strsplit.join('#');
        pattern = new RegExp(/#([a-zA-Z0-9]+) ([^#]+)/g);
        dict = {};
        match = {};
        while (match = pattern.exec(text)) {
          dict[match[1].trim()] = match[2].trim();
        }
        /*The first entry becomes the name*/

        dict["name"] = text.split('#')[0].trim();
        console.log("This is the title", text.split('#')[0].trim());
        createDate = new Date();
        dict["_Creation_Date"] = createDate;
        return dict;
      };

      return TopBarCreate;

    })(Backbone.View);
  });

}).call(this);
